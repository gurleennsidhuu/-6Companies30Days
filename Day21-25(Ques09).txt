class Solution {
    public class Pair{
        int x;
        int y;
        Pair(int x, int y){
            this.x=x;
            this.y=y;
        }
    }
    public List<List<Integer>> pacificAtlantic(int[][] heights) {
        List<List<Integer>> list=new ArrayList<>();
        int[][] vis=new int[heights.length][heights[0].length];
        for(int i=0;i<heights.length;i++){
            for(int j=0;j<heights[0].length;j++){
                vis[i][j]=-1;
            }
        }
        for(int i=0;i<heights.length;i++){
            for(int j=0;j<heights[0].length;j++){
                bfs(vis,i,j,heights);
            }
        }
        for(int i=0;i<heights.length;i++){
            for(int j=0;j<heights[0].length;j++){
                if(vis[i][j]==1){
                    List<Integer> temp=new ArrayList<>();
                    temp.add(i);
                    temp.add(j);
                    list.add(temp);
                }
            }
        }
        return list;
    }
    public void bfs(int[][] vis, int i, int j, int[][] heights){
        boolean done[][]=new boolean[heights.length][heights[0].length];
        Queue<Pair> q=new LinkedList<>();
        int dx[]={0,0,-1,1};
        int dy[]={-1,1,0,0};
        boolean pacific=false;
        boolean atlantic=false;
        q.add(new Pair(i,j));
        while(!q.isEmpty()){
            Pair temp=q.remove();
            if(done[temp.x][temp.y]) continue;
            else done[temp.x][temp.y]=true;
            if(temp.x==0 || temp.y==0) pacific=true;
            if(temp.x==heights.length-1 || temp.y==heights[0].length-1) atlantic=true;
            if((pacific && atlantic) || vis[temp.x][temp.y]==1){
                vis[i][j]=1;
                return;
            }
            for(int k=0;k<4;k++){
                int newx=temp.x+dx[k];
                int newy=temp.y+dy[k];
                if(newx>=0 && newy>=0 && newx<heights.length && newy<heights[0].length && heights[newx][newy]<=heights[temp.x][temp.y]) q.add(new Pair(newx,newy));
            }
        }
        if(pacific && atlantic) vis[i][j]=1;
        else vis[i][j]=0;
    }
}